server.port=8888

#
#defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms = 1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#
#word views out
spring.cloud.stream.bindings.pvout.destination=wvs
spring.cloud.stream.bindings.pvout.producer.header-mode=none
#
#word views in
spring.cloud.stream.bindings.pvin.destination=wvs
spring.cloud.stream.bindings.pvin.consumer.header-mode=none
#
#word count out
spring.cloud.stream.bindings.pcout.destination=wcs
spring.cloud.stream.bindings.pcout.producer.use-native-encoding=true
spring.cloud.stream.bindings.pcout.producer.header-mode=none
spring.cloud.stream.kafka.streams.bindings.pcout.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.pcout.producer.value-serde = org.apache.kafka.common.serialization.Serdes$LongSerde
#
#word count in
spring.cloud.stream.bindings.pcin.destination=wcs
spring.cloud.stream.bindings.pcin.consumer.use-native-decoding=true
spring.cloud.stream.bindings.pcin.group = ws1
spring.cloud.stream.bindings.pcin.content-type = application/json
spring.cloud.stream.bindings.pcin.consumer.header-mode = none
spring.cloud.stream.kafka.streams.bindings.pcin.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.pcin.consumer.value-serde = org.apache.kafka.common.serialization.Serdes$LongSerde


